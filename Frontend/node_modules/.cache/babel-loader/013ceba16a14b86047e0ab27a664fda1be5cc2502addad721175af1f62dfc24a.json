{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      product: {\n        prodID: '',\n        prodName: '',\n        categoryID: '',\n        price: '',\n        prodUrl: ''\n      },\n      err: [] // Initialize an error array\n    };\n  },\n\n  mounted() {\n    //console.log(this.$route.params.id);\n\n    this.getProductData(this.$route.params.id);\n  },\n  methods: {\n    getProductData(productID) {\n      axios.get(`https://capstoneconnection.onrender.com/products/${productID}`).then(res => {\n        console.log(res.data.product);\n        this.product = res.data.product;\n      });\n    },\n    async updateProduct() {\n      // Validate the fields\n      if (!this.prodName || !this.categoryID || !this.price || !this.prodUrl) {\n        this.err = [\"Please fill in all fields\"];\n        return; // Stop execution if there are validation errors\n      }\n\n      try {\n        const payload = {\n          prodID: this.prodID,\n          prodName: this.prodName,\n          categoryID: this.categoryID,\n          price: this.price,\n          prodUrl: this.prodUrl\n        };\n        const response = await axios.patch(`https://capstoneconnection.onrender.com/products/${this.$route.params.id}`, payload);\n\n        // Check if the response contains data property\n        // Check if the response is successful (status code 200)\n        if (response.status === 200) {\n          // Clear the form and error messages\n          this.$router.push(\"/admin\");\n          alert(\"Product updated successfully\");\n        } else {\n          // Handle the case where the response status is not 200\n          this.err = [\"An error occurred\"];\n        }\n      } catch (err) {\n        // Handle any errors that occur during the request\n        this.err = [err.response?.data?.msg || \"An error occurred\"];\n        console.error(err);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","product","prodID","prodName","categoryID","price","prodUrl","err","mounted","getProductData","$route","params","id","methods","productID","get","then","res","console","log","updateProduct","payload","response","patch","status","$router","push","alert","msg","error"],"sources":["C:\\Users\\cash\\Documents\\Capstone_workshop\\CapstoneEOMP\\Frontend\\src\\views\\EditProductView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container flex-container\">\r\n      <ul class=\"alert alert-warning\" v-if=\"this.err && this.err.length > 0\">\r\n        <li class=\"mb-0 ms-3\" v-for=\"(error, index) in this.err\" :key=\"index\">\r\n          {{ error }}\r\n        </li>\r\n      </ul>\r\n      <div v-if=\"product\">\r\n        <label>ID</label>\r\n          <input type=\"number\" placeholder=\"Enter productID\" v-model=\"product.prodID\" />\r\n\r\n          <label>Name</label>\r\n          <input type=\"text\" placeholder=\"Enter product name\" v-model=\"product.prodName\" />\r\n\r\n          <label>categoryID</label>\r\n          <input type=\"text\" placeholder=\"Bea(1), Per(2), acce(3)\" v-model=\"product.categoryID\" />\r\n\r\n          <label>Price</label>\r\n          <input type=\"number\" placeholder=\"Enter the price\" v-model=\"product.price\" />\r\n\r\n          <label>Image</label>\r\n          <input type=\"text\" placeholder=\"Enter the product link\" v-model=\"product.prodUrl\" />\r\n\r\n          <button @click=\"updateProduct\" class=\"btn-submit\">Update</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n  \r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n  return {\r\n    product: {\r\n      prodID: '',\r\n      prodName: '',\r\n      categoryID: '',\r\n      price: '',\r\n      prodUrl: '',\r\n    },\r\n    err: [], // Initialize an error array\r\n  };\r\n},\r\n\r\n\r\n\r\n  mounted(){\r\n    //console.log(this.$route.params.id);\r\n \r\n  this.getProductData(this.$route.params.id);\r\n  \r\n  },\r\n\r\n  methods: {\r\n\r\n    getProductData(productID) {\r\n     axios.get(`https://capstoneconnection.onrender.com/products/${productID}`).then(res => {\r\n    console.log(res.data.product);\r\n  this.product = res.data.product;\r\n});\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n    async updateProduct() {\r\n      // Validate the fields\r\n      if (!this.prodName || !this.categoryID || !this.price || !this.prodUrl) {\r\n        this.err = [\"Please fill in all fields\"];\r\n        return; // Stop execution if there are validation errors\r\n      }\r\n\r\n      try {\r\n        const payload = {\r\n          prodID: this.prodID,\r\n          prodName: this.prodName,\r\n          categoryID: this.categoryID,\r\n          price: this.price,\r\n          prodUrl: this.prodUrl,\r\n        };\r\n\r\n        const response = await axios.patch(`https://capstoneconnection.onrender.com/products/${this.$route.params.id}`, payload);\r\n\r\n\r\n        // Check if the response contains data property\r\n       // Check if the response is successful (status code 200)\r\n      if (response.status === 200) {\r\n        // Clear the form and error messages\r\n        this.$router.push(\"/admin\");\r\n        alert(\"Product updated successfully\");\r\n      } else {\r\n        // Handle the case where the response status is not 200\r\n        this.err = [\"An error occurred\"];\r\n      }\r\n\r\n      } catch (err) {\r\n        // Handle any errors that occur during the request\r\n        this.err = [err.response?.data?.msg || \"An error occurred\"];\r\n        console.error(err);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAkCA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,OAAO,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX,CAAC;MACDC,GAAG,EAAE,EAAE,CAAE;IACX,CAAC;EACH,CAAC;;EAICC,OAAOA,CAAA,EAAE;IACP;;IAEF,IAAI,CAACC,cAAc,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;EAE1C,CAAC;EAEDC,OAAO,EAAE;IAEPJ,cAAcA,CAACK,SAAS,EAAE;MACzBf,KAAK,CAACgB,GAAG,CAAE,oDAAmDD,SAAU,EAAC,CAAC,CAACE,IAAI,CAACC,GAAE,IAAK;QACxFC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACjB,IAAI,CAACC,OAAO,CAAC;QAC/B,IAAI,CAACA,OAAM,GAAIgB,GAAG,CAACjB,IAAI,CAACC,OAAO;MACjC,CAAC,CAAC;IAKE,CAAC;IAED,MAAMmB,aAAaA,CAAA,EAAG;MACpB;MACA,IAAI,CAAC,IAAI,CAACjB,QAAO,IAAK,CAAC,IAAI,CAACC,UAAS,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACC,OAAO,EAAE;QACtE,IAAI,CAACC,GAAE,GAAI,CAAC,2BAA2B,CAAC;QACxC,OAAM,CAAE;MACV;;MAEA,IAAI;QACF,MAAMc,OAAM,GAAI;UACdnB,MAAM,EAAE,IAAI,CAACA,MAAM;UACnBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,UAAU,EAAE,IAAI,CAACA,UAAU;UAC3BC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,OAAO,EAAE,IAAI,CAACA;QAChB,CAAC;QAED,MAAMgB,QAAO,GAAI,MAAMvB,KAAK,CAACwB,KAAK,CAAE,oDAAmD,IAAI,CAACb,MAAM,CAACC,MAAM,CAACC,EAAG,EAAC,EAAES,OAAO,CAAC;;QAGxH;QACD;QACD,IAAIC,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3B;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;UAC3BC,KAAK,CAAC,8BAA8B,CAAC;QACvC,OAAO;UACL;UACA,IAAI,CAACpB,GAAE,GAAI,CAAC,mBAAmB,CAAC;QAClC;MAEA,EAAE,OAAOA,GAAG,EAAE;QACZ;QACA,IAAI,CAACA,GAAE,GAAI,CAACA,GAAG,CAACe,QAAQ,EAAEtB,IAAI,EAAE4B,GAAE,IAAK,mBAAmB,CAAC;QAC3DV,OAAO,CAACW,KAAK,CAACtB,GAAG,CAAC;MACpB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}