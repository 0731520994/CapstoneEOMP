{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'editProduct',\n  data() {\n    return {\n      err: [],\n      product: {\n        prodID: \"\",\n        prodName: \"\",\n        category: \"\",\n        price: \"\",\n        prodUrl: \"\"\n      }\n    };\n  },\n  mounted() {\n    // Fetch product data based on the product ID from your route params or props\n    this.getProductData();\n  },\n  methods: {\n    getProductData() {\n      // Replace {id} with the actual product ID from your route or props\n      const productId = this.$route.params.id;\n      axios.get(`https://capstoneconnection.onrender.com/product/${productId}`).then(res => {\n        this.product = res.data.product;\n      }).catch(err => {\n        this.err = [err.response?.data?.msg || \"An error occurred\"];\n        console.error(err);\n      });\n    },\n    async updateProduct() {\n      // Send an HTTP request to update the product data\n      axios.post(`https://capstoneconnection.onrender.com/product/${this.product.prodID}`, this.product).then(res => {\n        console.log(res.data.msg);\n        this.err = [];\n      }).catch(err => {\n        this.err = [err.response?.data?.msg || \"An error occurred\"];\n        console.error(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","err","product","prodID","prodName","category","price","prodUrl","mounted","getProductData","methods","productId","$route","params","id","get","then","res","catch","response","msg","console","error","updateProduct","post","log"],"sources":["C:\\Users\\Student\\Documents\\Capstone_workshop\\CapstoneEOMP\\Frontend\\src\\views\\EditProductView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container flex-container\">\r\n      <!-- Input fields for editing product -->\r\n      <label>ID</label>\r\n      <input type=\"number\" placeholder=\"Enter product ID\" v-model=\"product.prodID\" />\r\n\r\n      <label>Name</label>\r\n      <input type=\"text\" placeholder=\"Enter product name\" v-model=\"product.prodName\" />\r\n\r\n      <label>Category</label>\r\n      <input type=\"text\" placeholder=\"Enter category\" v-model=\"product.category\" />\r\n\r\n      <label>Price</label>\r\n      <input type=\"number\" placeholder=\"Enter the price\" v-model=\"product.price\" />\r\n\r\n      <label>Image</label>\r\n      <input type=\"text\" placeholder=\"Enter the product link\" v-model=\"product.prodUrl\" />\r\n\r\n      <!-- Button to update product -->\r\n      <button @click=\"updateProduct\" class=\"btn-submit\">Update Product</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: 'editProduct',\r\n  data() {\r\n    return {\r\n      err: [],\r\n      product: {\r\n        prodID: \"\",\r\n        prodName: \"\",\r\n        category: \"\",\r\n        price: \"\",\r\n        prodUrl: \"\",\r\n      },\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    // Fetch product data based on the product ID from your route params or props\r\n    this.getProductData();\r\n  },\r\n\r\n  methods: {\r\n    getProductData() {\r\n      // Replace {id} with the actual product ID from your route or props\r\n      const productId = this.$route.params.id;\r\n      axios.get(`https://capstoneconnection.onrender.com/product/${productId}`)\r\n        .then(res => {\r\n          this.product = res.data.product;\r\n        })\r\n        .catch(err => {\r\n          this.err = [err.response?.data?.msg || \"An error occurred\"];\r\n          console.error(err);\r\n        });\r\n    },\r\n\r\n    async updateProduct() {\r\n      // Send an HTTP request to update the product data\r\n      axios.post(`https://capstoneconnection.onrender.com/product/${this.product.prodID}`, this.product)\r\n        .then(res => {\r\n          console.log(res.data.msg);\r\n          this.err = [];\r\n        })\r\n        .catch(err => {\r\n          this.err = [err.response?.data?.msg || \"An error occurred\"];\r\n          console.error(err);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EAEDC,OAAO,EAAE;IACPD,cAAcA,CAAA,EAAG;MACf;MACA,MAAME,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACvChB,KAAK,CAACiB,GAAG,CAAE,mDAAkDJ,SAAU,EAAC,EACrEK,IAAI,CAACC,GAAE,IAAK;QACX,IAAI,CAACf,OAAM,GAAIe,GAAG,CAACjB,IAAI,CAACE,OAAO;MACjC,CAAC,EACAgB,KAAK,CAACjB,GAAE,IAAK;QACZ,IAAI,CAACA,GAAE,GAAI,CAACA,GAAG,CAACkB,QAAQ,EAAEnB,IAAI,EAAEoB,GAAE,IAAK,mBAAmB,CAAC;QAC3DC,OAAO,CAACC,KAAK,CAACrB,GAAG,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IAED,MAAMsB,aAAaA,CAAA,EAAG;MACpB;MACAzB,KAAK,CAAC0B,IAAI,CAAE,mDAAkD,IAAI,CAACtB,OAAO,CAACC,MAAO,EAAC,EAAE,IAAI,CAACD,OAAO,EAC9Fc,IAAI,CAACC,GAAE,IAAK;QACXI,OAAO,CAACI,GAAG,CAACR,GAAG,CAACjB,IAAI,CAACoB,GAAG,CAAC;QACzB,IAAI,CAACnB,GAAE,GAAI,EAAE;MACf,CAAC,EACAiB,KAAK,CAACjB,GAAE,IAAK;QACZ,IAAI,CAACA,GAAE,GAAI,CAACA,GAAG,CAACkB,QAAQ,EAAEnB,IAAI,EAAEoB,GAAE,IAAK,mBAAmB,CAAC;QAC3DC,OAAO,CAACC,KAAK,CAACrB,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}