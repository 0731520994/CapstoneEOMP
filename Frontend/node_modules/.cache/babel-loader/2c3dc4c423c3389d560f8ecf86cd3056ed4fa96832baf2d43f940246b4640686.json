{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["C:\\Users\\Student\\Documents\\Capstone_workshop\\CapstoneEOMP\\Frontend\\src\\views\\ButtonsView.vue"],"sourcesContent":["<!-- <template>\r\n    <input\r\n      class=\"m-2\"\r\n      v-model=\"searchTerm\"\r\n      placeholder=\"Search for a product...\"\r\n    />\r\n    <h1>Products</h1>\r\n    <div class=\"container\">\r\n      <div class=\"filter-btns\">\r\n        <select id=\"sort-select\" v-model=\"selectedSort\">\r\n          <option value=\"options\">Sort options</option>\r\n          <option value=\"alphabetical\">Sort Alphabetically</option>\r\n          <option value=\"price-high\">Sort by Price (High to Low)</option>\r\n          <option value=\"price-low\">Sort by Price (Low to High)</option>\r\n        </select>\r\n        <button\r\n          type=\"button\"\r\n          class=\"filter-btn\"\r\n          :class=\"{ 'active-btn': selectedFilter === 'all' }\"\r\n          @click=\"selectFilter('all')\"\r\n        >\r\n          all\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"filter-btn\"\r\n          :class=\"{ 'active-btn': selectedFilter === 'Perfumes' }\"\r\n          @click=\"selectFilter('Perfumes')\"\r\n        >\r\n          Beauty\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"filter-btn\"\r\n          :class=\"{ 'active-btn': selectedFilter === 'Beauty' }\"\r\n          @click=\"selectFilter('Beauty')\"\r\n        >\r\n        Accessories\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"filter-btn\"\r\n          :class=\"{ 'active-btn': selectedFilter === 'Accessories' }\"\r\n          @click=\"selectFilter('Accessories')\">\r\n      \r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div\r\n      v-if=\"filteredProducts.length > 0\"\r\n      class=\"products_container media-container row row-cols-4 m-0\"\r\n      id=\"products\"\r\n    >\r\n      <CardComp\r\n        v-for=\"product of filteredProducts\"\r\n        :key=\"product.prodID\"\r\n        :product=\"product\"\r\n      />\r\n    </div>\r\n    <SpinnerComp v-else />\r\n  </template>\r\n  \r\n  <script>\r\n \r\n  import SpinnerComp from \"@/components/SpinnerComp.vue\";\r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedFilter: \"all\",\r\n        selectedSort: \"options\",\r\n        products: [],\r\n        searchTerm: \"\",\r\n      };\r\n    },\r\n    computed: {\r\n      sortedProducts() {\r\n        let sorted = this.products;\r\n  \r\n        if (this.selectedFilter !== \"all\") {\r\n          sorted = sorted.filter(\r\n            (product) => product.category === this.selectedFilter\r\n          );\r\n        }\r\n  \r\n        if (this.selectedSort === \"alphabetical\") {\r\n          sorted.sort((a, b) => a.prodName.localeCompare(b.prodName));\r\n        } else if (this.selectedSort === \"price-high\") {\r\n          sorted.sort((a, b) => b.price - a.price);\r\n        } else if (this.selectedSort === \"price-low\") {\r\n          sorted.sort((a, b) => a.price - b.price);\r\n        }\r\n  \r\n        return sorted;\r\n      },\r\n     \r\n      filteredProducts() {\r\n        return this.sortedProducts.filter((product) =>\r\n          product.prodName.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n        );\r\n      },\r\n    },\r\n    methods: {\r\n      selectFilter(filter) {\r\n        this.selectedFilter = filter;\r\n      },\r\n    },\r\n    mounted() {\r\n      this.$store.dispatch(\"getProducts\").then(() => {\r\n        this.products = this.$store.state.products;\r\n      });\r\n    },\r\n  \r\n    components: { CardComp, SpinnerComp },\r\n  };\r\n  </script> -->\r\n\r\n  <template>\r\n    <div>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n    export default {\r\n      \r\n    }\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  \r\n  </style>"],"mappings":";;uBAqHIA,mBAAA,CAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}