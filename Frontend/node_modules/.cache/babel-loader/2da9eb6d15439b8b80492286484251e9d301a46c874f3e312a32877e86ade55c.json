{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CheckoutComp from '@/components/CheckoutComp.vue';\nimport SingleView from '@/components/SingleView.vue';\nexport default {\n  computed: {\n    products() {\n      return this.$store.state.products;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchProducts');\n  },\n  methods: {\n    single(prodID) {\n      const viewProd = this.products.find(products => products.prodID === prodID);\n      this.$store.commit(\"setViewItem\", viewProd);\n      this.$router.push({\n        name: \"single\",\n        params: {\n          prodID: prodID\n        }\n      });\n    },\n    async addToCart(prodID) {\n      const addedProduct = this.products.find(product => product.prodID === prodID);\n      const quantity = 1; // You can set the quantity as per your requirement\n\n      try {\n        const response = await axios.post('/AddNewCart', {\n          prodID,\n          quantity\n        });\n        if (response.status === 200) {\n          // Cart item added successfully, you can show a success message or update the cart in the store.\n          this.$store.commit(\"addToCart\", addedProduct);\n        }\n      } catch (error) {\n        // Handle any error here, e.g., show an error message.\n        console.error(\"Error adding to cart:\", error);\n      }\n    },\n    components: {\n      SingleView,\n      CheckoutView\n    }\n  }\n};","map":{"version":3,"names":["CheckoutComp","SingleView","computed","products","$store","state","mounted","dispatch","methods","single","prodID","viewProd","find","commit","$router","push","name","params","addToCart","addedProduct","product","quantity","response","axios","post","status","error","console","components","CheckoutView"],"sources":["C:\\Users\\Student\\Documents\\Capstone_workshop\\CapstoneEOMP\\Frontend\\src\\views\\AllView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\" style=\"width: 75rem; height: 70rem\">\r\n    <div class=\"card-body\">\r\n      <h2>All Products</h2>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\" v-for=\"product in products\" :key=\"product?.prodID\">\r\n          <div class=\"card\">\r\n            <img :src=\"product?.prodUrl\" class=\"card-img-top img-fluid\" :alt=\"product?.name\" style=\"width: 15rem; height: 14rem; padding: 2rem; margin:auto\">\r\n            <div class=\"card-inner-body\">\r\n              <h5 class=\"card-title\">{{ product?.prodName }}</h5>\r\n              <p class=\"card-text\">R{{ product?.price }}</p>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n              <div class=\"card-footer-buttons\">\r\n                <button @click=\"single(product?.prodID)\" class=\"allbtn\">See more</button>\r\n                <button @click=\"Cart(product?.prodID)\" class=\"allbtn\">Add to cart</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<!-- :to=\"{name:'single', params: {id: product?.prodID}  } -->\r\n\r\n<script>\r\n\r\nimport CheckoutComp from '@/components/CheckoutComp.vue';\r\nimport SingleView from '@/components/SingleView.vue';\r\n\r\nexport default {\r\n  computed: {\r\n    products() {\r\n      return this.$store.state.products;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch('fetchProducts');\r\n  },\r\n  methods: {\r\n  single(prodID) {\r\n    const viewProd= this.products.find(\r\n      (products)=> products.prodID===prodID\r\n    );\r\n    this.$store.commit(\"setViewItem\", viewProd)\r\n    this.$router.push({ name:\"single\",params:{prodID:prodID}\r\n    })\r\n  },\r\n\r\n  async addToCart(prodID) {\r\n    const addedProduct = this.products.find((product) => product.prodID === prodID);\r\n    const quantity = 1; // You can set the quantity as per your requirement\r\n\r\n    try {\r\n      const response = await axios.post('/AddNewCart', { prodID, quantity });\r\n      if (response.status === 200) {\r\n        // Cart item added successfully, you can show a success message or update the cart in the store.\r\n        this.$store.commit(\"addToCart\", addedProduct);\r\n      }\r\n    } catch (error) {\r\n      // Handle any error here, e.g., show an error message.\r\n      console.error(\"Error adding to cart:\", error);\r\n    }\r\n  },\r\n\r\n\r\n\r\n  components: {\r\n      SingleView,\r\n      CheckoutView,\r\n  }\r\n  \r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n.card {\r\n  margin: 6%;\r\n  border-radius: 15%;\r\n}\r\n\r\n.card-inner-body {\r\n  background-color: rgba(128, 0, 128, 0.277);\r\n  color: black;\r\n}\r\n\r\n.card-footer-buttons {\r\n  display: none;\r\n}\r\n\r\n.card-footer-buttons button {\r\n  margin-right: 10px;\r\n}\r\n.card:hover .card-footer-buttons {\r\n  display: block;\r\n \r\n}\r\n\r\n.allbtn{\r\n\r\n font-family: Georgia, 'Times New Roman', Times, serif;\r\n text-align: center;\r\n border: 3px solid white;\r\n padding: 5px 5px;\r\n background: purple;\r\n color: white;\r\n border-radius: 24px;\r\n transition: 0.25px;\r\n cursor: pointer ;\r\n text-decoration: solid; \r\n}\r\n\r\n\r\n.allbtn:hover{\r\n  color: black;\r\n  background:  rgb(238, 216, 248);\r\n}\r\n</style>\r\n"],"mappings":";AA4BA,OAAOA,YAAW,MAAO,+BAA+B;AACxD,OAAOC,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,QAAQ;IACnC;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,eAAe,CAAC;EACvC,CAAC;EACDC,OAAO,EAAE;IACTC,MAAMA,CAACC,MAAM,EAAE;MACb,MAAMC,QAAQ,GAAE,IAAI,CAACR,QAAQ,CAACS,IAAI,CAC/BT,QAAQ,IAAIA,QAAQ,CAACO,MAAM,KAAGA,MACjC,CAAC;MACD,IAAI,CAACN,MAAM,CAACS,MAAM,CAAC,aAAa,EAAEF,QAAQ;MAC1C,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAC,QAAQ;QAACC,MAAM,EAAC;UAACP,MAAM,EAACA;QAAM;MACvD,CAAC;IACH,CAAC;IAED,MAAMQ,SAASA,CAACR,MAAM,EAAE;MACtB,MAAMS,YAAW,GAAI,IAAI,CAAChB,QAAQ,CAACS,IAAI,CAAEQ,OAAO,IAAKA,OAAO,CAACV,MAAK,KAAMA,MAAM,CAAC;MAC/E,MAAMW,QAAO,GAAI,CAAC,EAAE;;MAEpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACC,IAAI,CAAC,aAAa,EAAE;UAAEd,MAAM;UAAEW;QAAS,CAAC,CAAC;QACtE,IAAIC,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3B;UACA,IAAI,CAACrB,MAAM,CAACS,MAAM,CAAC,WAAW,EAAEM,YAAY,CAAC;QAC/C;MACF,EAAE,OAAOO,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAIDE,UAAU,EAAE;MACR3B,UAAU;MACV4B;IACJ;EAEA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}