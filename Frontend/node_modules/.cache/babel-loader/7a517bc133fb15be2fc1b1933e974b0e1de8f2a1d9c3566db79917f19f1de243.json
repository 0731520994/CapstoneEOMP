{"ast":null,"code":"import axios from \"axios\";\nimport SpinnerComp from '@/components/SpinnerComp.vue';\nexport default {\n  components: {\n    SpinnerComp\n  },\n  data() {\n    return {\n      product: [],\n      user: [],\n      ascending: true,\n      sortKey: \"prodName\"\n    };\n  },\n  created() {\n    this.getProducts();\n    this.getUsers();\n  },\n  computed: {\n    sortedProducts() {\n      const sorted = [...this.product];\n      sorted.sort((a, b) => {\n        if (this.sortKey === \"prodName\") {\n          return this.ascending ? a.prodName.localeCompare(b.prodName) : b.prodName.localeCompare(a.prodName);\n        } else if (this.sortKey === \"price\") {\n          return this.ascending ? a.price - b.price : b.price - a.price;\n        }\n        return 0;\n      });\n      return sorted;\n    }\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get(\"https://capstoneeomp-zsz7.onrender.com/products\");\n        this.fetchProductsproduct = response.data.results;\n        console.log(response);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get(\"https://capstoneeomp-zsz7.onrender.com/users\");\n        this.fetchuser = response.data.results;\n        console.log(response);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    sortByProductName() {\n      this.ascending = !this.ascending;\n      this.sortKey = \"prodName\";\n    },\n    sortByPrice() {\n      this.sortKey = \"price\";\n      this.ascending = !this.ascending;\n    }\n  },\n  async deleteProduct(prodID) {\n    try {} catch (error) {\n      console.error(error);\n    }\n  }\n};","map":{"version":3,"names":["axios","SpinnerComp","components","data","product","user","ascending","sortKey","created","getProducts","getUsers","computed","sortedProducts","sorted","sort","a","b","prodName","localeCompare","price","methods","fetchProducts","response","get","fetchProductsproduct","results","console","log","err","fetchUsers","fetchuser","sortByProductName","sortByPrice","deleteProduct","prodID","error"],"sources":["C:\\Users\\Student\\Documents\\Capstone_workshop\\CapstoneEOMP\\Frontend\\src\\views\\AdminView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"sortBtns\">\r\n      <button class=\"btn btn-primary\" @click=\"sortByProductName\">Sort by Product Name</button>\r\n      <button class=\"btn btn-primary\" @click=\"sortByPrice\">Sort by Price</button>\r\n    </div>\r\n  \r\n      <div class=\"container\">\r\n        <div class=\"row\" v-if=\"product\">\r\n          <div class=\"col\">\r\n            <h1 style=\"text-decoration:underline\">Products</h1>\r\n            <div>\r\n            </div>\r\n          </div>\r\n          <div class=\"prodAdmin\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Product Name</th>\r\n                  <th>Category ID</th>\r\n                  <th>Price</th>\r\n                  <th class=\"img-fluid\">Image</th>\r\n                  <th>Edit/Delete</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  class=\"tdSize\"\r\n                  v-for=\"item in sortedProducts\"\r\n                  :key=\"item.prodID\"\r\n                >\r\n                  <td>{{ item.prodID }}</td>\r\n                  <td>{{ item.prodName }}</td>\r\n                  <td>{{ item.categoryID }}</td>\r\n                  <td>{{ item.price }}</td>\r\n                  <td><img class=\"adminImg\" :src=\"item.prodUrl\" alt=\"\" /></td>\r\n                  <td>\r\n                    <div class=\"btnGroupUser\">\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-primary\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#editProductModal\"\r\n                        @click=\"editProduct(item)\"\r\n                      >\r\n                        EDIT\r\n                      </button>\r\n                      <button class=\"btn btn-danger\" @click=\"deleteProduct(item.prodID)\">Delete</button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"$store.state.spinner\" class=\"row\">\r\n          <spinnerComp />\r\n        </div>\r\n        \r\n  \r\n        <!-- USER TABLE -->\r\n        <div class=\"row containerUser container-fluid \"  v-if=\"user\">\r\n          <div class=\"col-12\">\r\n            <h1 style=\"text-decoration:underline\">Users</h1>\r\n          </div>\r\n          <div class=\"Usertable-container\">\r\n            <table class=\"Usertable \">\r\n              <thead>\r\n                <tr>\r\n                  <th>#ID</th>\r\n                  <th>FirstName</th>\r\n                  <th>LastName</th>\r\n                  <th>Gender</th>\r\n                  <th>Email</th>\r\n                  <th>Encrypt Password</th>\r\n                  <th>Role</th>\r\n                  <th>Image</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"item in user\" :key=\"item.userID\">\r\n                  <td>{{ item.userID }}</td>\r\n                  <td>{{ item.firstName }}</td>\r\n                  <td>{{ item.lastName }}</td>\r\n                  <td>{{ item.gender }}</td>\r\n                  <td>{{ item.emailAdd }}</td>\r\n                  <td>{{ item.userPass }}</td>\r\n                  <td>{{ item.userRole }}</td>\r\n                  <td><img class=\"tableImg\" :src=\"item.userProfile\" alt=\"\" /></td>\r\n                  <td>\r\n                    <div class=\"btnGroupUser\">\r\n                      <div>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-primary\"\r\n                          data-bs-toggle=\"modal\"\r\n                          data-bs-target=\"#editUserModal\"\r\n                        >\r\n                          EDIT\r\n                        </button>\r\n                      </div>\r\n                      <button class=\"btn btn-danger\">Delete</button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"$store.state.spinner\" class=\"row\">\r\n          <spinnerComp />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n \r\n  import axios from \"axios\";\r\n  import SpinnerComp from '@/components/SpinnerComp.vue'\r\n  \r\n  export default {\r\n    components: {\r\n    \r\n      SpinnerComp\r\n    },\r\n    data() {\r\n      return {\r\n        product: [],\r\n        user: [],\r\n        ascending: true,\r\n        sortKey: \"prodName\",\r\n      };\r\n    },\r\n    created() {\r\n      this.getProducts();\r\n      this.getUsers();\r\n    },\r\n    computed: {\r\n      sortedProducts() {\r\n        const sorted = [...this.product];\r\n  \r\n        sorted.sort((a, b) => {\r\n          if (this.sortKey === \"prodName\") {\r\n            return this.ascending\r\n              ? a.prodName.localeCompare(b.prodName)\r\n              : b.prodName.localeCompare(a.prodName);\r\n          } else if (this.sortKey === \"price\") {\r\n            return this.ascending ? a.price - b.price : b.price - a.price;\r\n          }\r\n          return 0;\r\n        });\r\n  \r\n        return sorted;\r\n      },\r\n    },\r\n    methods: {\r\n      async fetchProducts() {\r\n        try {\r\n          const response = await axios.get(\r\n            \"https://capstoneeomp-zsz7.onrender.com/products\"\r\n          );\r\n          this.fetchProductsproduct = response.data.results;\r\n          console.log(response);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n      async fetchUsers() {\r\n        try {\r\n          const response = await axios.get(\r\n            \"https://capstoneeomp-zsz7.onrender.com/users\"\r\n          );\r\n          this.fetchuser = response.data.results;\r\n          console.log(response);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      },\r\n      sortByProductName() {\r\n        this.ascending = !this.ascending;\r\n        this.sortKey = \"prodName\";\r\n      },\r\n      sortByPrice() {\r\n        this.sortKey = \"price\";\r\n        this.ascending = !this.ascending;\r\n      },\r\n    },\r\n    async deleteProduct(prodID) {\r\n        try {\r\n       \r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n  };\r\n  </script>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  <style>\r\n  .container{\r\n  justify-content: space-evenly;\r\n  }\r\n  \r\n  table{\r\n    background: #53554e;\r\n    color:white;\r\n    text-align: center;\r\n  }\r\n  .prodAdmin table {\r\n      width: 100%;\r\n      border-collapse: collapse;\r\n    }\r\n  \r\n    .prodAdmin th,\r\n    .prodAdmin td {\r\n      padding: 10px;\r\n      border: 1px solid #ccc;\r\n      text-align: left;\r\n    }\r\n  \r\n    .prodAdmin td img {\r\n      max-width: 100px;\r\n      max-height: 100px;\r\n    }\r\n  \r\n  \r\n    /* user table  */\r\n    .containerUser{\r\n  \r\n      margin: 20px;\r\n      \r\n    }\r\n    .Usertable {\r\n      margin-left: -50px;\r\n    }\r\n   \r\n    .Usertable th,\r\n    .Usertable td {\r\n      padding: 10px;\r\n      border: 1px solid #ccc;\r\n      text-align: left;\r\n      width: 14.28%; \r\n  \r\n    }\r\n  \r\n    .Usertable td img {\r\n      max-width: 80px;\r\n      max-height: 80px;\r\n    }\r\n  \r\n    .Usertable-container {\r\n      height: 100vh;\r\n    }\r\n  \r\n    .btnGroupUser{\r\n      display: flex;\r\n      gap:10px;\r\n    \r\n    }\r\n  .AddingMod{\r\n    background: #b71d1d;\r\n    margin-left: 0%;\r\n  }\r\n  \r\n  \r\n  @media (max-width: 768px) {\r\n    .Usertable {\r\n      margin-left: 0; /* Adjust margin for smaller screens */\r\n    }\r\n  \r\n    .Usertable th,\r\n    .Usertable td {\r\n      width: auto; /* Allow content to wrap on smaller screens */\r\n    }\r\n  \r\n    .Usertable td img {\r\n      max-width: 60px; /* Adjust image size for smaller screens */\r\n      max-height: 60px;\r\n    }\r\n  \r\n    .btnGroupUser {\r\n      flex-direction: column; /* Stack buttons vertically on smaller screens */\r\n      align-items: flex-start; /* Adjust alignment of buttons */\r\n    }\r\n  }\r\n  .sortBtns>button{\r\n    margin: 5px;\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  .containerUser {\r\n    margin: 20px;\r\n  }\r\n  \r\n  .Usertable {\r\n    margin-left: -50px;\r\n    width: 100%; /* Set the table width to 100% */\r\n  }\r\n  \r\n  .Usertable th,\r\n  .Usertable td {\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    text-align: left;\r\n    width: auto; /* Let the table cells adjust their width */\r\n  }\r\n  \r\n  .Usertable td img {\r\n    max-width: 80px;\r\n    max-height: 80px;\r\n  }\r\n  \r\n  /* Remove .Usertable-container and its related styles */\r\n  \r\n  \r\n  </style>"],"mappings":"AAuHE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,WAAU,MAAO,8BAA6B;AAErD,eAAe;EACbC,UAAU,EAAE;IAEVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,MAAMC,MAAK,GAAI,CAAC,GAAG,IAAI,CAACT,OAAO,CAAC;MAEhCS,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACpB,IAAI,IAAI,CAACT,OAAM,KAAM,UAAU,EAAE;UAC/B,OAAO,IAAI,CAACD,SAAQ,GAChBS,CAAC,CAACE,QAAQ,CAACC,aAAa,CAACF,CAAC,CAACC,QAAQ,IACnCD,CAAC,CAACC,QAAQ,CAACC,aAAa,CAACH,CAAC,CAACE,QAAQ,CAAC;QAC1C,OAAO,IAAI,IAAI,CAACV,OAAM,KAAM,OAAO,EAAE;UACnC,OAAO,IAAI,CAACD,SAAQ,GAAIS,CAAC,CAACI,KAAI,GAAIH,CAAC,CAACG,KAAI,GAAIH,CAAC,CAACG,KAAI,GAAIJ,CAAC,CAACI,KAAK;QAC/D;QACA,OAAO,CAAC;MACV,CAAC,CAAC;MAEF,OAAON,MAAM;IACf;EACF,CAAC;EACDO,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAC9B,iDACF,CAAC;QACD,IAAI,CAACC,oBAAmB,GAAIF,QAAQ,CAACnB,IAAI,CAACsB,OAAO;QACjDC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACvB,EAAE,OAAOM,GAAG,EAAE;QACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAClB;IACF,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAC9B,8CACF,CAAC;QACD,IAAI,CAACO,SAAQ,GAAIR,QAAQ,CAACnB,IAAI,CAACsB,OAAO;QACtCC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACvB,EAAE,OAAOM,GAAG,EAAE;QACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAClB;IACF,CAAC;IACDG,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACzB,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS;MAChC,IAAI,CAACC,OAAM,GAAI,UAAU;IAC3B,CAAC;IACDyB,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACzB,OAAM,GAAI,OAAO;MACtB,IAAI,CAACD,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS;IAClC;EACF,CAAC;EACD,MAAM2B,aAAaA,CAACC,MAAM,EAAE;IACxB,IAAI,CAEJ,EAAE,OAAOC,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}