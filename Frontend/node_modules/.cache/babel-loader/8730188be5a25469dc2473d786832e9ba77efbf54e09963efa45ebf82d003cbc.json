{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport sweet from 'sweetalert';\nimport { mapState, mapActions } from 'vuex';\nimport SingleView from '@/components/SingleView.vue';\nexport default {\n  data() {\n    return {\n      selectedFilter: 'all',\n      selectedSort: 'options',\n      searchTerm: ''\n    };\n  },\n  computed: {\n    ...mapState(['products']),\n    filteredAndSortedProducts() {\n      let filteredProducts = this.products;\n      if (this.selectedFilter !== 'all') {\n        filteredProducts = filteredProducts.filter(product => product.category === this.selectedFilter);\n      }\n      if (this.searchTerm.trim() !== '') {\n        const searchTermLower = this.searchTerm.toLowerCase();\n        filteredProducts = filteredProducts.filter(product => product.prodName.toLowerCase().includes(searchTermLower));\n      }\n      if (this.selectedSort === 'alphabetically') {\n        filteredProducts.sort((a, b) => a.prodName.localeCompare(b.prodName));\n      } else if (this.selectedSort === 'price-high') {\n        filteredProducts.sort((a, b) => b.price - a.price);\n      } else if (this.selectedSort === 'price-low') {\n        filteredProducts.sort((a, b) => a.price - b.price);\n      }\n      return filteredProducts;\n    }\n  },\n  methods: {\n    ...mapActions(['fetchProducts']),\n    single(prodID) {\n      const viewProd = this.products.find(products => products.prodID === prodID);\n      this.$store.commit(\"setViewItem\", viewProd);\n      this.$router.push({\n        name: \"single\",\n        params: {\n          prodID: prodID\n        }\n      });\n    },\n    addToCart(product) {\n      if (product) {\n        this.$store.commit('addToCart', product);\n\n        // Pass the cart data as a query parameter to the checkout view\n        this.$router.push({\n          name: 'checkout',\n          query: {\n            cart: JSON.stringify(this.$store.state.cart)\n          }\n        });\n      } else {\n        // Handle the case where no product is selected\n        sweet({\n          title: \"\",\n          text: \"\",\n          type: \"\",\n          timer: 2000\n        });\n      }\n    }\n  },\n  components: {\n    SingleView\n  },\n  mounted() {\n    this.$store.dispatch('fetchProducts');\n  }\n};","map":{"version":3,"names":["sweet","mapState","mapActions","SingleView","data","selectedFilter","selectedSort","searchTerm","computed","filteredAndSortedProducts","filteredProducts","products","filter","product","category","trim","searchTermLower","toLowerCase","prodName","includes","sort","a","b","localeCompare","price","methods","single","prodID","viewProd","find","$store","commit","$router","push","name","params","addToCart","query","cart","JSON","stringify","state","title","text","type","timer","components","mounted","dispatch"],"sources":["C:\\Users\\Student\\Documents\\Capstone_workshop\\CapstoneEOMP\\Frontend\\src\\views\\AllView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\" style=\"width: 75rem; height: 70rem\">\r\n    <label>Filter</label>\r\n    <select v-model=\"selectedFilter\">\r\n      <option value=\"all\">All</option>\r\n      <option value=\"Beauty\">Beauty</option>\r\n      <option value=\"Accessories\">Accessories</option>\r\n      <option value=\"Perfumes\">Perfumes</option>\r\n    </select>\r\n    \r\n    <label>Sort</label>\r\n  <select v-model=\"selectedSort\">\r\n    <option value=\"alphabetically\">Alphabetically</option>\r\n    <option value=\"price-high\">Price High to Low</option>\r\n    <option value=\"price-low\">Price Low to High</option>\r\n  </select>\r\n    <label>Search</label>\r\n    <input v-model=\"searchTerm\" type=\"text\" placeholder=\"Search for a product...\" />\r\n\r\n\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\" v-for=\"product in filteredAndSortedProducts\" :key=\"product?.prodID\">\r\n          <div class=\"card\">\r\n            <img :src=\"product?.prodUrl\" class=\"card-img-top img-fluid\" :alt=\"product?.name\" style=\"width: 15rem; height: 14rem; padding: 2rem; margin:auto\">\r\n            <div class=\"card-inner-body\">\r\n              <h5 class=\"card-title\">{{ product?.prodName }}</h5>\r\n              <p class=\"card-text\">R{{ product?.price }}</p>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n              <div class=\"card-footer-buttons\">\r\n                <button @click=\"single(product?.prodID)\" class=\"allbtn\">See more</button>\r\n                <button @click=\"addToCart(product)\" class>Add to cart</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport sweet from 'sweetalert'\r\nimport { mapState, mapActions } from 'vuex';\r\nimport SingleView from '@/components/SingleView.vue';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFilter: 'all', \r\n      selectedSort: 'options', \r\n      searchTerm: '',\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['products']), \r\n    filteredAndSortedProducts() {\r\n     \r\n      let filteredProducts = this.products;\r\n\r\n    \r\n      if (this.selectedFilter !== 'all') {\r\n        filteredProducts = filteredProducts.filter(product => product.category === this.selectedFilter);\r\n      }\r\n\r\n  \r\n      if (this.searchTerm.trim() !== '') {\r\n        const searchTermLower = this.searchTerm.toLowerCase();\r\n        filteredProducts = filteredProducts.filter(product => product.prodName.toLowerCase().includes(searchTermLower));\r\n      }\r\n\r\n  \r\n      if (this.selectedSort === 'alphabetically') {\r\n        filteredProducts.sort((a, b) => a.prodName.localeCompare(b.prodName));\r\n      } else if (this.selectedSort === 'price-high') {\r\n        filteredProducts.sort((a, b) => b.price - a.price);\r\n      } else if (this.selectedSort === 'price-low') {\r\n        filteredProducts.sort((a, b) => a.price - b.price);\r\n      }\r\n\r\n      return filteredProducts;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchProducts']), \r\n\r\n    single(prodID) {\r\n    const viewProd= this.products.find(\r\n      (products)=> products.prodID===prodID\r\n    );\r\n    this.$store.commit(\"setViewItem\", viewProd)\r\n    this.$router.push({ name:\"single\",params:{prodID:prodID}\r\n    })\r\n  },\r\n  addToCart(product) {\r\n    if (product) {\r\n      this.$store.commit('addToCart', product);\r\n\r\n      // Pass the cart data as a query parameter to the checkout view\r\n      this.$router.push({ name: 'checkout', query: { cart: JSON.stringify(this.$store.state.cart) } });\r\n    } else {\r\n      // Handle the case where no product is selected\r\n      sweet({\r\n        title: \"\",\r\n        text: \"\",\r\n        type: \"\",\r\n        timer: 2000\r\n      });\r\n    }\r\n  },\r\n\r\n  },\r\n\r\n  components: {\r\n    SingleView,\r\n   \r\n  },\r\n  mounted() {\r\n    this.$store.dispatch('fetchProducts'); \r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n.card {\r\n  margin: 6%;\r\n  border-radius: 15%;\r\n}\r\n\r\n.card-inner-body {\r\n  background-color: rgba(128, 0, 128, 0.277);\r\n  color: black;\r\n}\r\n\r\n.card-footer-buttons {\r\n  display: none;\r\n}\r\n\r\n.card-footer-buttons button {\r\n  margin-right: 10px;\r\n}\r\n.card:hover .card-footer-buttons {\r\n  display: block;\r\n \r\n}\r\n\r\n.allbtn{\r\n\r\n font-family: Georgia, 'Times New Roman', Times, serif;\r\n text-align: center;\r\n border: 3px solid white;\r\n padding: 5px 5px;\r\n background: purple;\r\n color: white;\r\n border-radius: 24px;\r\n transition: 0.25px;\r\n cursor: pointer ;\r\n text-decoration: solid; \r\n}\r\n\r\n\r\n.allbtn:hover{\r\n  color: black;\r\n  background:  rgb(238, 216, 248);\r\n}\r\n\r\n@media (max-width: 650px) {\r\n\r\n.card-body {\r\nwidth: 15rem;\r\n}\r\n\r\n@media (max-width: 1108px) {\r\n.card-body{\r\n  width: 20rem;\r\n}\r\n}\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}