{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nimport sweet from 'sweetalert2';\nimport cookies from 'js-cookie';\nconst capstoneeompUrl = \"https://capstoneconnection.onrender.com\";\nexport default createStore({\n  state: {\n    users: null,\n    user: null,\n    products: [],\n    product: null,\n    newProduct: {\n      prodID: '',\n      prodName: '',\n      categoryID: '',\n      price: '',\n      prodUrl: ''\n    },\n    orders: null,\n    order: null,\n    categories: null,\n    addToCart: [],\n    ViewItem: null,\n    category: null,\n    spinner: false,\n    token: null,\n    msg: null,\n    state: {\n      product: {\n        prodUrl: ''\n      }\n    }\n  },\n  getters: {},\n  mutations: {\n    setUsers(state, users) {\n      state.users = users;\n    },\n    setUser(state, user) {\n      state.user = user;\n    },\n    setProducts(state, products) {\n      state.products = products;\n    },\n    setProduct(state, product) {\n      state.product = product;\n    },\n    setOrders(state, orders) {\n      state.orders = orders;\n    },\n    setOrder(state, order) {\n      state.order = order;\n    },\n    setCategories(state, categories) {\n      state.categories = categories;\n    },\n    setCategory(state, category) {\n      state.category = category;\n    },\n    setSpinner(state, value) {\n      state.spinner = value;\n    },\n    setToken(state, token) {\n      state.spinner = token;\n    },\n    setMsg(state, msg) {\n      state.msg = msg;\n    },\n    setViewItem(state, ViewItem) {\n      state.ViewItem = ViewItem;\n    },\n    setAddToCart(state, product) {\n      if (!state.cart) {\n        state.cart = [];\n      }\n      state.cart.push(product);\n    },\n    addProduct(state, newProduct) {\n      state.products.push(newProduct);\n    }\n  },\n  actions: {\n    async updateUser(context, updatedUser) {\n      try {\n        const response = await axios.patch(`${cUrl}users/${updatedUser.userID}`, updatedUser);\n        return response.data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async getUser(context) {\n      try {\n        const response = await axios.get(`${cUrl}users`);\n        context.commit('setUsers', response.data.results);\n        context.commit('setSpinner', false);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async fetchProducts(context) {\n      try {\n        const {\n          data\n        } = await axios.get(`${capstoneeompUrl}/products`);\n        context.commit('setProducts', data.results);\n      } catch (err) {\n        console.log(err);\n        context.commit('setMsg', 'error occurred');\n      }\n    },\n    async fetchProduct(context, id) {\n      try {\n        const response = await axios.get(`${cUrl}product/${id}`);\n        const {\n          results,\n          err\n        } = response.data;\n        if (results) {\n          context.commit('setProduct', results[0]);\n        } else {\n          context.commit('setMsg', err);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async addProduct(context, payload) {\n      try {\n        const response = await axios.post(`${capstoneeompUrl}/AddNewProduct`, payload);\n        context.commit('addProduct', payload);\n        const {\n          msg,\n          err\n        } = response.data;\n        if (msg) {\n          context.commit('setMsg', msg);\n        } else if (err) {\n          console.log(err);\n          context.commit('setMsg', err);\n        }\n        await context.dispatch('fetchProducts');\n      } catch (error) {\n        console.error(error);\n        context.commit('setMsg', 'Error adding product');\n        throw error;\n      }\n    },\n    async updateProduct(context, updatedProduct) {\n      try {\n        // Make sure to use the correct URL for updating a product\n        const response = await axios.patch(`${capstoneeompUrl}/products/${updatedProduct.productID}`, updatedProduct);\n\n        // Check if the update was successful\n        if (response.status === 200) {\n          context.commit('setMsg', 'Product updated successfully');\n        } else {\n          context.commit('setMsg', 'Product update failed');\n        }\n        return response.data; // You can return data if needed\n      } catch (error) {\n        console.error(error);\n        context.commit('setMsg', 'An error occurred while updating the product');\n        throw error; // Rethrow the error for further handling, if necessary\n      }\n    },\n\n    async fetchProductsByCategory(context, categoryName) {\n      try {\n        const {\n          data\n        } = await axios.get(`${capstoneeompUrl}/products/category/${categoryName}`);\n        context.commit('setProducts', data.results);\n      } catch (err) {\n        console.log(err);\n        context.commit('setMsg', 'Error occurred while fetching products by category');\n      }\n    },\n    addToCart(product) {\n      axios.post('http://your-api-url/cart/add', {\n        product\n      }).then(response => {\n        this.$store.commit('addToCart', product);\n      });\n    },\n    removeFromCart(productId) {\n      axios.delete(`http://your-api-url/cart/remove/${productId}`).then(() => {\n        this.$store.commit('removeFromCart', productId);\n      });\n    },\n    modules: {}\n  }\n});","map":{"version":3,"names":["createStore","axios","sweet","cookies","capstoneeompUrl","state","users","user","products","product","newProduct","prodID","prodName","categoryID","price","prodUrl","orders","order","categories","addToCart","ViewItem","category","spinner","token","msg","getters","mutations","setUsers","setUser","setProducts","setProduct","setOrders","setOrder","setCategories","setCategory","setSpinner","value","setToken","setMsg","setViewItem","setAddToCart","cart","push","addProduct","actions","updateUser","context","updatedUser","response","patch","cUrl","userID","data","error","getUser","get","commit","results","err","console","log","fetchProducts","fetchProduct","id","payload","post","dispatch","updateProduct","updatedProduct","productID","status","fetchProductsByCategory","categoryName","then","$store","removeFromCart","productId","delete","modules"],"sources":["C:/Users/cash/Documents/Capstone_workshop/CapstoneEOMP/Frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\nimport sweet from 'sweetalert2'; \r\nimport cookies from 'js-cookie'; \r\n\r\nconst capstoneeompUrl = \"https://capstoneconnection.onrender.com\"\r\n\r\nexport default createStore({\r\n  state: {\r\n    users: null,\r\n    user: null,\r\n    products: [],\r\n    product: null,\r\n    newProduct: {\r\n      prodID: '',\r\n      prodName: '',\r\n      categoryID: '',\r\n      price: '',\r\n      prodUrl: '',\r\n    },\r\n    orders: null,\r\n    order: null,\r\n    categories: null,\r\n    addToCart: [],\r\n    ViewItem: null,\r\n    category: null,\r\n    spinner: false,\r\n    token: null,\r\n    msg: null,\r\n    state: {\r\n      product: {\r\n        prodUrl: '',\r\n      },\r\n    },\r\n  },\r\n  getters: {\r\n\r\n  },\r\n  mutations: {\r\n    setUsers(state, users) {\r\n      state.users = users;\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    setProducts(state, products) {\r\n      state.products = products;\r\n    },\r\n    setProduct(state, product) {\r\n      state.product = product;\r\n    },\r\n    setOrders(state, orders){\r\n      state.orders = orders;\r\n    },\r\n    setOrder(state, order){\r\n      state.order = order;\r\n    },\r\n    setCategories(state, categories){\r\n      state.categories = categories;\r\n    },\r\n    setCategory(state, category) {\r\n      state.category = category;\r\n    },\r\n    setSpinner(state, value) {\r\n      state.spinner = value;\r\n    },\r\n    setToken(state, token) {\r\n      state.spinner = token;\r\n    },\r\n    setMsg(state, msg) {\r\n      state.msg = msg;\r\n    },\r\n    setViewItem(state, ViewItem) {\r\n      state.ViewItem = ViewItem;\r\n    },\r\n    setAddToCart(state, product) {\r\n      if (!state.cart) {\r\n        state.cart = [];\r\n      }\r\n      state.cart.push(product);\r\n    },\r\n      addProduct(state, newProduct) {\r\n    state.products.push(newProduct);\r\n  },\r\n\r\n  },\r\n  \r\n  actions: {\r\n\r\n\r\n   \r\n\r\n\r\n\r\n\r\n\r\n    async updateUser(context, updatedUser) {\r\n      try {\r\n        const response = await axios.patch(\r\n          `${cUrl}users/${updatedUser.userID}`,\r\n          updatedUser\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    async getUser(context) {\r\n      try {\r\n        const response = await axios.get(`${cUrl}users`);\r\n        context.commit('setUsers', response.data.results);\r\n        context.commit('setSpinner', false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n\r\n    async fetchProducts(context) {\r\n      try {\r\n        const { data } = await axios.get(`${capstoneeompUrl}/products`); \r\n        context.commit('setProducts', data.results);\r\n      } catch (err) {\r\n        console.log(err);\r\n        context.commit('setMsg', 'error occurred');\r\n      }\r\n    },\r\n    \r\n\r\n    async fetchProduct(context, id) {\r\n      try {\r\n        const response = await axios.get(`${cUrl}product/${id}`);\r\n        const { results, err } = response.data;\r\n        if (results) {\r\n          context.commit('setProduct', results[0]);\r\n        } else {\r\n          context.commit('setMsg', err);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n\r\n    async addProduct(context, payload) {\r\n      try {\r\n        const response = await axios.post(`${capstoneeompUrl}/AddNewProduct`, payload);\r\n\r\n        context.commit('addProduct', payload);\r\n        const { msg, err } = response.data;\r\n    \r\n        if (msg) {\r\n          context.commit('setMsg', msg);\r\n        } else if (err) {\r\n          console.log(err);\r\n          context.commit('setMsg', err);\r\n        }\r\n    \r\n        await context.dispatch('fetchProducts');\r\n      } catch (error) {\r\n        console.error(error);\r\n        context.commit('setMsg', 'Error adding product');\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    async updateProduct(context, updatedProduct) {\r\n      try {\r\n        // Make sure to use the correct URL for updating a product\r\n        const response = await axios.patch(`${capstoneeompUrl}/products/${updatedProduct.productID}`, updatedProduct);\r\n    \r\n        // Check if the update was successful\r\n        if (response.status === 200) {\r\n          context.commit('setMsg', 'Product updated successfully');\r\n        } else {\r\n          context.commit('setMsg', 'Product update failed');\r\n        }\r\n    \r\n        return response.data; // You can return data if needed\r\n      } catch (error) {\r\n        console.error(error);\r\n        context.commit('setMsg', 'An error occurred while updating the product');\r\n        throw error; // Rethrow the error for further handling, if necessary\r\n      }\r\n    },\r\n    \r\n\r\n    async fetchProductsByCategory(context, categoryName) {\r\n      try {\r\n        const { data } = await axios.get(`${capstoneeompUrl}/products/category/${categoryName}`);\r\n        context.commit('setProducts', data.results);\r\n      } catch (err) {\r\n        console.log(err);\r\n        context.commit('setMsg', 'Error occurred while fetching products by category');\r\n      }\r\n    },\r\n    \r\n    addToCart(product) {\r\n      axios.post('http://your-api-url/cart/add', { product }).then((response) => {\r\n        this.$store.commit('addToCart', product);\r\n    \r\n      }\r\n      )\r\n    },\r\n    \r\n\r\n    removeFromCart(productId) {\r\n      axios.delete(`http://your-api-url/cart/remove/${productId}`).then(() => {\r\n        this.$store.commit('removeFromCart', productId);\r\n      });\r\n    },\r\n\r\n  \r\n\r\n  modules: {\r\n\r\n  },\r\n}},\r\n)\r\n\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,eAAe,GAAG,yCAAyC;AAEjE,eAAeJ,WAAW,CAAC;EACzBK,KAAK,EAAE;IACLC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,IAAI;IACXC,GAAG,EAAE,IAAI;IACTnB,KAAK,EAAE;MACLI,OAAO,EAAE;QACPM,OAAO,EAAE;MACX;IACF;EACF,CAAC;EACDU,OAAO,EAAE,CAET,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACtB,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDsB,OAAOA,CAACvB,KAAK,EAAEE,IAAI,EAAE;MACnBF,KAAK,CAACE,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDsB,WAAWA,CAACxB,KAAK,EAAEG,QAAQ,EAAE;MAC3BH,KAAK,CAACG,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDsB,UAAUA,CAACzB,KAAK,EAAEI,OAAO,EAAE;MACzBJ,KAAK,CAACI,OAAO,GAAGA,OAAO;IACzB,CAAC;IACDsB,SAASA,CAAC1B,KAAK,EAAEW,MAAM,EAAC;MACtBX,KAAK,CAACW,MAAM,GAAGA,MAAM;IACvB,CAAC;IACDgB,QAAQA,CAAC3B,KAAK,EAAEY,KAAK,EAAC;MACpBZ,KAAK,CAACY,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDgB,aAAaA,CAAC5B,KAAK,EAAEa,UAAU,EAAC;MAC9Bb,KAAK,CAACa,UAAU,GAAGA,UAAU;IAC/B,CAAC;IACDgB,WAAWA,CAAC7B,KAAK,EAAEgB,QAAQ,EAAE;MAC3BhB,KAAK,CAACgB,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDc,UAAUA,CAAC9B,KAAK,EAAE+B,KAAK,EAAE;MACvB/B,KAAK,CAACiB,OAAO,GAAGc,KAAK;IACvB,CAAC;IACDC,QAAQA,CAAChC,KAAK,EAAEkB,KAAK,EAAE;MACrBlB,KAAK,CAACiB,OAAO,GAAGC,KAAK;IACvB,CAAC;IACDe,MAAMA,CAACjC,KAAK,EAAEmB,GAAG,EAAE;MACjBnB,KAAK,CAACmB,GAAG,GAAGA,GAAG;IACjB,CAAC;IACDe,WAAWA,CAAClC,KAAK,EAAEe,QAAQ,EAAE;MAC3Bf,KAAK,CAACe,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDoB,YAAYA,CAACnC,KAAK,EAAEI,OAAO,EAAE;MAC3B,IAAI,CAACJ,KAAK,CAACoC,IAAI,EAAE;QACfpC,KAAK,CAACoC,IAAI,GAAG,EAAE;MACjB;MACApC,KAAK,CAACoC,IAAI,CAACC,IAAI,CAACjC,OAAO,CAAC;IAC1B,CAAC;IACCkC,UAAUA,CAACtC,KAAK,EAAEK,UAAU,EAAE;MAChCL,KAAK,CAACG,QAAQ,CAACkC,IAAI,CAAChC,UAAU,CAAC;IACjC;EAEA,CAAC;EAEDkC,OAAO,EAAE;IASP,MAAMC,UAAUA,CAACC,OAAO,EAAEC,WAAW,EAAE;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM/C,KAAK,CAACgD,KAAK,CAC/B,GAAEC,IAAK,SAAQH,WAAW,CAACI,MAAO,EAAC,EACpCJ,WACF,CAAC;QACD,OAAOC,QAAQ,CAACI,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAMA,KAAK;MACb;IACF,CAAC;IAED,MAAMC,OAAOA,CAACR,OAAO,EAAE;MACrB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAM/C,KAAK,CAACsD,GAAG,CAAE,GAAEL,IAAK,OAAM,CAAC;QAChDJ,OAAO,CAACU,MAAM,CAAC,UAAU,EAAER,QAAQ,CAACI,IAAI,CAACK,OAAO,CAAC;QACjDX,OAAO,CAACU,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;MACrC,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IAED,MAAMG,aAAaA,CAACf,OAAO,EAAE;MAC3B,IAAI;QACF,MAAM;UAAEM;QAAK,CAAC,GAAG,MAAMnD,KAAK,CAACsD,GAAG,CAAE,GAAEnD,eAAgB,WAAU,CAAC;QAC/D0C,OAAO,CAACU,MAAM,CAAC,aAAa,EAAEJ,IAAI,CAACK,OAAO,CAAC;MAC7C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBZ,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAE,gBAAgB,CAAC;MAC5C;IACF,CAAC;IAGD,MAAMM,YAAYA,CAAChB,OAAO,EAAEiB,EAAE,EAAE;MAC9B,IAAI;QACF,MAAMf,QAAQ,GAAG,MAAM/C,KAAK,CAACsD,GAAG,CAAE,GAAEL,IAAK,WAAUa,EAAG,EAAC,CAAC;QACxD,MAAM;UAAEN,OAAO;UAAEC;QAAI,CAAC,GAAGV,QAAQ,CAACI,IAAI;QACtC,IAAIK,OAAO,EAAE;UACXX,OAAO,CAACU,MAAM,CAAC,YAAY,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,MAAM;UACLX,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAEE,GAAG,CAAC;QAC/B;MACF,CAAC,CAAC,OAAOA,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IAED,MAAMf,UAAUA,CAACG,OAAO,EAAEkB,OAAO,EAAE;MACjC,IAAI;QACF,MAAMhB,QAAQ,GAAG,MAAM/C,KAAK,CAACgE,IAAI,CAAE,GAAE7D,eAAgB,gBAAe,EAAE4D,OAAO,CAAC;QAE9ElB,OAAO,CAACU,MAAM,CAAC,YAAY,EAAEQ,OAAO,CAAC;QACrC,MAAM;UAAExC,GAAG;UAAEkC;QAAI,CAAC,GAAGV,QAAQ,CAACI,IAAI;QAElC,IAAI5B,GAAG,EAAE;UACPsB,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAEhC,GAAG,CAAC;QAC/B,CAAC,MAAM,IAAIkC,GAAG,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAChBZ,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAEE,GAAG,CAAC;QAC/B;QAEA,MAAMZ,OAAO,CAACoB,QAAQ,CAAC,eAAe,CAAC;MACzC,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAACA,KAAK,CAAC;QACpBP,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAE,sBAAsB,CAAC;QAChD,MAAMH,KAAK;MACb;IACF,CAAC;IAED,MAAMc,aAAaA,CAACrB,OAAO,EAAEsB,cAAc,EAAE;MAC3C,IAAI;QACF;QACA,MAAMpB,QAAQ,GAAG,MAAM/C,KAAK,CAACgD,KAAK,CAAE,GAAE7C,eAAgB,aAAYgE,cAAc,CAACC,SAAU,EAAC,EAAED,cAAc,CAAC;;QAE7G;QACA,IAAIpB,QAAQ,CAACsB,MAAM,KAAK,GAAG,EAAE;UAC3BxB,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAE,8BAA8B,CAAC;QAC1D,CAAC,MAAM;UACLV,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAE,uBAAuB,CAAC;QACnD;QAEA,OAAOR,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAACA,KAAK,CAAC;QACpBP,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAE,8CAA8C,CAAC;QACxE,MAAMH,KAAK,CAAC,CAAC;MACf;IACF,CAAC;;IAGD,MAAMkB,uBAAuBA,CAACzB,OAAO,EAAE0B,YAAY,EAAE;MACnD,IAAI;QACF,MAAM;UAAEpB;QAAK,CAAC,GAAG,MAAMnD,KAAK,CAACsD,GAAG,CAAE,GAAEnD,eAAgB,sBAAqBoE,YAAa,EAAC,CAAC;QACxF1B,OAAO,CAACU,MAAM,CAAC,aAAa,EAAEJ,IAAI,CAACK,OAAO,CAAC;MAC7C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBZ,OAAO,CAACU,MAAM,CAAC,QAAQ,EAAE,oDAAoD,CAAC;MAChF;IACF,CAAC;IAEDrC,SAASA,CAACV,OAAO,EAAE;MACjBR,KAAK,CAACgE,IAAI,CAAC,8BAA8B,EAAE;QAAExD;MAAQ,CAAC,CAAC,CAACgE,IAAI,CAAEzB,QAAQ,IAAK;QACzE,IAAI,CAAC0B,MAAM,CAAClB,MAAM,CAAC,WAAW,EAAE/C,OAAO,CAAC;MAE1C,CACA,CAAC;IACH,CAAC;IAGDkE,cAAcA,CAACC,SAAS,EAAE;MACxB3E,KAAK,CAAC4E,MAAM,CAAE,mCAAkCD,SAAU,EAAC,CAAC,CAACH,IAAI,CAAC,MAAM;QACtE,IAAI,CAACC,MAAM,CAAClB,MAAM,CAAC,gBAAgB,EAAEoB,SAAS,CAAC;MACjD,CAAC,CAAC;IACJ,CAAC;IAIHE,OAAO,EAAE,CAET;EACF;AAAC,CACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}