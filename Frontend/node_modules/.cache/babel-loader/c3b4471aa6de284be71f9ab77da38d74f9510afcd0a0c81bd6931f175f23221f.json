{"ast":null,"code":"export default {\n  data() {\n    return {\n      payload: {\n        firstName: \"\",\n        lastName: \"\",\n        gender: \"\",\n        emailAdd: \"\",\n        userPass: \"\",\n        profileUrl: \"\"\n      },\n      registrationMessage: \"\" // New property for registration response\n    };\n  },\n\n  methods: {\n    async register() {\n      try {\n        console.log(\"Register method called\");\n        console.log(\"Payload:\", this.payload);\n\n        // Dispatch the 'register' action and capture the response message\n        const response = await this.$store.dispatch(\"register\", this.payload);\n\n        // Update the registration response message\n        this.registrationMessage = response.msg;\n\n        // Check if registration was successful before pushing data to admin\n        if (response.result) {\n          this.pushDataToAdmin(response.result);\n        }\n      } catch (error) {\n        console.error(\"Registration error:\", error);\n      }\n    },\n    // Push registered user's data to admin (replace with your actual admin data handling logic)\n    pushDataToAdmin(userData) {\n      // Example: Dispatch an action to push data to admin in Vuex store\n      this.$store.dispatch(\"pushDataToAdmin\", userData);\n    }\n  }\n};","map":{"version":3,"names":["data","payload","firstName","lastName","gender","emailAdd","userPass","profileUrl","registrationMessage","methods","register","console","log","response","$store","dispatch","msg","result","pushDataToAdmin","error","userData"],"sources":["C:\\Users\\cash\\Documents\\Capstone_workshop\\CapstoneEOMP\\Frontend\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"register\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"exampleInputfirstName1\" class=\"form-label\">firstName</label>\r\n        <input\r\n          type=\"text\" \r\n          class=\"form-control\"\r\n          id=\"exampleInputfirstName1\"\r\n          aria-describedby=\"emailHelp\"\r\n          v-model=\"payload.firstName\"\r\n          required/>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInputlastName1\" class=\"form-label\">lastName</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"exampleInputlastName1\"\r\n        aria-describedby=\"emailHelp\"\r\n        v-model=\"payload.lastName\"\r\n        required\r\n      />\r\n    \r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInputgender1\" class=\"form-label\">gender</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"exampleInputgender1\"\r\n        aria-describedby=\"emailHelp\"\r\n        v-model=\"payload.gender\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"exampleInputEmail1\"\r\n        aria-describedby=\"emailHelp\"\r\n        v-model=\"payload.emailAdd\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        id=\"exampleInputPassword1\"\r\n        minlength=\"4\"\r\n        v-model=\"payload.userPass\"\r\n        required\r\n      />\r\n    </div>\r\n    <div class=\"mb-3\">\r\n      <label for=\"exampleInputuserProfile1\" class=\"form-label\">userProfile</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"exampleInputuserProfile1\"\r\n        v-model=\"payload.profileUrl\"\r\n        required\r\n      />\r\n      <p v-if=\"registrationMessage\">{{ registrationMessage }}</p>\r\n    </div>\r\n   \r\n    <button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      payload: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        gender: \"\",\r\n        emailAdd: \"\",\r\n        userPass: \"\",\r\n        profileUrl: \"\",\r\n      },\r\n      registrationMessage: \"\", // New property for registration response\r\n    };\r\n  },\r\n  methods: {\r\n    async register() {\r\n      try {\r\n        console.log(\"Register method called\");\r\n        console.log(\"Payload:\", this.payload);\r\n        \r\n        // Dispatch the 'register' action and capture the response message\r\n        const response = await this.$store.dispatch(\"register\", this.payload);\r\n\r\n        // Update the registration response message\r\n        this.registrationMessage = response.msg;\r\n\r\n        // Check if registration was successful before pushing data to admin\r\n        if (response.result) {\r\n          this.pushDataToAdmin(response.result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Registration error:\", error);\r\n      }\r\n    },\r\n\r\n    // Push registered user's data to admin (replace with your actual admin data handling logic)\r\n    pushDataToAdmin(userData) {\r\n      // Example: Dispatch an action to push data to admin in Vuex store\r\n      this.$store.dispatch(\"pushDataToAdmin\", userData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"AA4EA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE;MACd,CAAC;MACDC,mBAAmB,EAAE,EAAE,CAAE;IAC3B,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACX,OAAO,CAAC;;QAErC;QACA,MAAMY,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAACd,OAAO,CAAC;;QAErE;QACA,IAAI,CAACO,mBAAkB,GAAIK,QAAQ,CAACG,GAAG;;QAEvC;QACA,IAAIH,QAAQ,CAACI,MAAM,EAAE;UACnB,IAAI,CAACC,eAAe,CAACL,QAAQ,CAACI,MAAM,CAAC;QACvC;MACF,EAAE,OAAOE,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAED;IACAD,eAAeA,CAACE,QAAQ,EAAE;MACxB;MACA,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,iBAAiB,EAAEK,QAAQ,CAAC;IACnD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}