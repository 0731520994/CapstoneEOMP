{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    users: null,\n    user: null,\n    products: null,\n    product: null,\n    orders: null,\n    order: null,\n    categories: null,\n    category: null,\n    spinner: false,\n    token: null,\n    msg: null,\n    state: {\n      product: {\n        prodUrl: ''\n      }\n    }\n  },\n  getters: {},\n  mutations: {\n    setUsers(state, users) {\n      state.users = users;\n    },\n    setUser(state, user) {\n      state.user = user;\n    },\n    setProducts(state, products) {\n      state.products = products;\n    },\n    setProduct(state, product) {\n      state.product = product;\n    },\n    setOrders(state, orders) {\n      state.orders = orders;\n    },\n    setOrder(state, order) {\n      state.order = order;\n    },\n    setCategories(state, categories) {\n      state.categories = categories;\n    },\n    setCategory(state, setCategory) {\n      state.category = category;\n    },\n    setSpinner(state, value) {\n      state.spinner = value;\n    },\n    setToken(state, token) {\n      state.spinner = token;\n    },\n    setMsg(state, msg) {\n      state.msg = msg;\n    }\n  },\n  actions: {\n    async fetchUsers(context) {\n      try {\n        const {\n          data\n        } = await axios.get(`${cUrl}users`);\n        context.commit('setUsers', data.results);\n      } catch (e) {\n        context.commit('setMsg', 'error occ');\n      }\n    },\n    async updateUser(context, updatedUser) {\n      try {\n        const response = await axios.patch(`${cUrl}users/${updatedUser.userID}`, updatedUser);\n        return response.data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async getUsers(context) {\n      try {\n        context.commit('setSpinner', true);\n        const response = await axios.get(`${cUrl}users`);\n        context.commit('setUsers', response.data.results);\n        context.commit('setSpinner', false);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async fetchProducts(context) {\n      try {\n        const {\n          data\n        } = await axios.get(`${cUrl}products`);\n        context.commit('setProducts', data.results);\n      } catch (err) {\n        console.log(err);\n        context.commit('setMsg', 'error occurred');\n      }\n    },\n    async fetchProduct(context, id) {\n      try {\n        const response = await axios.get(`${cUrl}product/${id}`);\n        const {\n          results,\n          err\n        } = response.data;\n        if (results) {\n          context.commit('setProduct', results[0]);\n        } else {\n          context.commit('setMsg', err);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async addProduct(context, payload) {\n      try {\n        const response = await axios.post(`${cUrl}products`, payload);\n        const {\n          msg,\n          err\n        } = response.data;\n        if (msg) {\n          context.commit('setMsg', msg);\n        } else if (err) {\n          console.log(err);\n          context.commit('setMsg', err);\n        }\n        await context.dispatch('fetchProducts');\n      } catch (error) {\n        console.error(error);\n        context.commit('setMsg', 'Error adding product');\n        throw error;\n      }\n    },\n    async fetchCategories(context) {\n      try {\n        const {\n          data\n        } = await axios.get(`${cUrl}categories`);\n        context.commit('setCategories', data.results);\n      } catch (error) {\n        context.commit('setMsg', 'Error fetching categories');\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","axios","state","users","user","products","product","orders","order","categories","category","spinner","token","msg","prodUrl","getters","mutations","setUsers","setUser","setProducts","setProduct","setOrders","setOrder","setCategories","setCategory","setSpinner","value","setToken","setMsg","actions","fetchUsers","context","data","get","cUrl","commit","results","e","updateUser","updatedUser","response","patch","userID","error","getUsers","err","console","log","fetchProducts","fetchProduct","id","addProduct","payload","post","dispatch","fetchCategories","modules"],"sources":["C:/Users/Student/Documents/Capstone_workshop/CapstoneEOMP/Frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default createStore({\r\n  state: {\r\n    users: null,\r\n    user: null,\r\n    products: null,\r\n    product: null,\r\n    orders: null,\r\n    order: null,\r\n    categories: null,\r\n    category: null,\r\n    spinner: false,\r\n    token: null,\r\n    msg: null,\r\n    state: {\r\n      product: {\r\n        prodUrl: '',\r\n      },\r\n    },\r\n  },\r\n  getters: {\r\n\r\n  },\r\n  mutations: {\r\n    setUsers(state, users) {\r\n      state.users = users;\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    setProducts(state, products) {\r\n      state.products = products;\r\n    },\r\n    setProduct(state, product) {\r\n      state.product = product;\r\n    },\r\n    setOrders(state, orders){\r\n      state.orders = orders;\r\n    },\r\n    setOrder(state, order){\r\n      state.order = order;\r\n    },\r\n    setCategories(state, categories){\r\n      state.categories = categories;\r\n    },\r\n    setCategory(state, setCategory){\r\n      state.category = category;\r\n    },\r\n    setSpinner(state, value) {\r\n      state.spinner = value;\r\n    },\r\n    setToken(state, token) {\r\n      state.spinner = token;\r\n    },\r\n    setMsg(state, msg) {\r\n      state.msg = msg;\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchUsers(context) {\r\n      try {\r\n        const { data } = await axios.get(`${cUrl}users`);\r\n        context.commit('setUsers', data.results);\r\n      } catch (e) {\r\n        context.commit('setMsg', 'error occ');\r\n      }\r\n    },\r\n\r\n    async updateUser(context, updatedUser) {\r\n      try {\r\n        const response = await axios.patch(\r\n          `${cUrl}users/${updatedUser.userID}`,\r\n          updatedUser\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    async getUsers(context) {\r\n      try {\r\n        context.commit('setSpinner', true);\r\n        const response = await axios.get(`${cUrl}users`);\r\n        context.commit('setUsers', response.data.results);\r\n        context.commit('setSpinner', false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n\r\n    async fetchProducts(context) {\r\n      try {\r\n        const { data } = await axios.get(`${cUrl}products`);\r\n        context.commit('setProducts', data.results);\r\n      } catch (err) {\r\n        console.log(err);\r\n        context.commit('setMsg', 'error occurred');\r\n      }\r\n    },\r\n\r\n    async fetchProduct(context, id) {\r\n      try {\r\n        const response = await axios.get(`${cUrl}product/${id}`);\r\n        const { results, err } = response.data;\r\n        if (results) {\r\n          context.commit('setProduct', results[0]);\r\n        } else {\r\n          context.commit('setMsg', err);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n\r\n    async addProduct(context, payload) {\r\n      try {\r\n        const response = await axios.post(`${cUrl}products`, payload);\r\n        const { msg, err } = response.data;\r\n\r\n        if (msg) {\r\n          context.commit('setMsg', msg);\r\n        } else if (err) {\r\n          console.log(err);\r\n          context.commit('setMsg', err);\r\n        }\r\n\r\n        await context.dispatch('fetchProducts');\r\n      } catch (error) {\r\n        console.error(error);\r\n        context.commit('setMsg', 'Error adding product');\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    async fetchCategories(context) {\r\n      try {\r\n        const { data } = await axios.get(`${cUrl}categories`);\r\n        context.commit('setCategories', data.results);\r\n      } catch (error) {\r\n        context.commit('setMsg', 'Error fetching categories');\r\n      }\r\n    },\r\n\r\n\r\n\r\n  },\r\n\r\n  modules: {\r\n\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}