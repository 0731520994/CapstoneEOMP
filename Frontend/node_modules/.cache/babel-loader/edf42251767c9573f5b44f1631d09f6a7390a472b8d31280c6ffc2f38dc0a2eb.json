{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      product: {\n        prodID: \"\",\n        prodName: \"\",\n        categoryID: \"\",\n        price: \"\",\n        prodUrl: \"\"\n      },\n      err: []\n    };\n  },\n  getUserById: state => userID => {\n    return state.users.find(user => user.id === userID);\n  },\n  getProductById: state => productID => {\n    return state.products.find(product => product.id === productID);\n  },\n  mounted() {\n    this.getProductData(this.$route.params.id);\n  },\n  methods: {\n    getProductData(productID) {\n      axios.get(`https://capstoneconnection.onrender.com/product/${productID}`).then(res => {\n        this.product = res.data.product;\n      });\n    },\n    async updateProductData() {\n      if (!this.product.prodName || !this.product.categoryID || !this.product.price || !this.product.prodUrl) {\n        this.err = [\"Please fill in all fields\"];\n        return;\n      }\n      try {\n        const payload = {\n          prodID: this.product.prodID,\n          prodName: this.product.prodName,\n          categoryID: this.product.categoryID,\n          price: this.product.price,\n          prodUrl: this.product.prodUrl\n        };\n        const response = await axios.patch(`https://capstoneconnection.onrender.com/product/${this.$route.params.id}`, payload);\n        if (response.status === 200) {\n          this.$router.push(\"/admin\");\n          alert(\"Product updated successfully\");\n        } else {\n          this.err = [\"An error occurred\"];\n        }\n      } catch (err) {\n        this.err = [err.response?.data?.msg || \"An error occurred\"];\n        console.error(err);\n      }\n    }\n  },\n  updateUser: (state, {\n    userID,\n    changes\n  }) => {\n    const userToUpdate = state.users.find(user => user.id === userID);\n    if (userToUpdate) {\n      Object.assign(userToUpdate, changes);\n    }\n  },\n  updateProduct: (state, {\n    productID,\n    changes\n  }) => {\n    const productToUpdate = state.products.find(product => product.id === productID);\n    if (productToUpdate) {\n      Object.assign(productToUpdate, changes);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","product","prodID","prodName","categoryID","price","prodUrl","err","getUserById","state","userID","users","find","user","id","getProductById","productID","products","mounted","getProductData","$route","params","methods","get","then","res","updateProductData","payload","response","patch","status","$router","push","alert","msg","console","error","updateUser","changes","userToUpdate","Object","assign","updateProduct","productToUpdate"],"sources":["C:\\Users\\Student\\Documents\\Capstone_workshop\\CapstoneEOMP\\Frontend\\src\\views\\EditProductView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container flex-container\">\r\n      <ul class=\"alert alert-warning\" v-if=\"this.err && this.err.length > 0\">\r\n        <li class=\"mb-0 ms-3\" v-for=\"(error, index) in this.err\" :key=\"index\">\r\n          {{ error }}\r\n        </li>\r\n      </ul>\r\n      <div v-if=\"product\">\r\n        <label>ID</label>\r\n        <input type=\"number\" placeholder=\"Enter productID\" v-model=\"product.prodID\" />\r\n\r\n        <label>Name</label>\r\n        <input type=\"text\" placeholder=\"Enter product name\" v-model=\"product.prodName\" />\r\n\r\n        <label>categoryID</label>\r\n        <input type=\"text\" placeholder=\"Bea(1), Per(2), acce(3)\" v-model=\"product.categoryID\" />\r\n\r\n        <label>Price</label>\r\n        <input type=\"number\" placeholder=\"Enter the price\" v-model=\"product.price\" />\r\n\r\n        <label>Image</label>\r\n        <input type=\"text\" placeholder=\"Enter the product link\" v-model=\"product.prodUrl\" />\r\n\r\n        <button @click=\"updateProductData\" class=\"btn-submit\">Update</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      product: {\r\n        prodID: \"\",\r\n        prodName: \"\",\r\n        categoryID: \"\",\r\n        price:\"\",\r\n        prodUrl: \"\",\r\n      },\r\n      err: [], \r\n    };\r\n  },\r\n  getUserById: (state) => (userID) => {\r\n      return state.users.find((user) => user.id === userID);\r\n    },\r\n\r\n    getProductById: (state) => (productID) => {\r\n      return state.products.find((product) => product.id ===productID);\r\n    },\r\n  mounted() {\r\n    this.getProductData(this.$route.params.id);\r\n  },\r\n\r\n  methods: {\r\n    getProductData(productID) {\r\n      axios.get(`https://capstoneconnection.onrender.com/product/${productID}`).then((res) => {\r\n        this.product = res.data.product;\r\n      });\r\n    },\r\n\r\n    async updateProductData() {\r\n     \r\n      if (!this.product.prodName || !this.product.categoryID || !this.product.price || !this.product.prodUrl) {\r\n        this.err = [\"Please fill in all fields\"];\r\n        return; \r\n      }\r\n\r\n      try {\r\n        const payload = {\r\n          prodID: this.product.prodID,\r\n          prodName: this.product.prodName,\r\n          categoryID: this.product.categoryID,\r\n          price: this.product.price,\r\n          prodUrl: this.product.prodUrl,\r\n        };\r\n\r\n        const response = await axios.patch(\r\n          `https://capstoneconnection.onrender.com/product/${this.$route.params.id}`,\r\n          payload\r\n        );\r\n\r\n       \r\n        if (response.status === 200) {\r\n          this.$router.push(\"/admin\");\r\n          alert(\"Product updated successfully\");\r\n        } else {\r\n        \r\n          this.err = [\"An error occurred\"];\r\n        }\r\n      } catch (err) {\r\n     \r\n        this.err = [err.response?.data?.msg || \"An error occurred\"];\r\n        console.error(err);\r\n      }\r\n    },\r\n  },\r\n\r\n\r\n\r\n  updateUser: (state, { userID, changes }) => {\r\n    const userToUpdate = state.users.find((user) => user.id === userID);\r\n    if (userToUpdate) {\r\n      Object.assign(userToUpdate, changes);\r\n    }\r\n  },\r\n\r\n  updateProduct: (state, { productID, changes }) => {\r\n    const productToUpdate = state.products.find((product) => product.id === productID);\r\n    if (productToUpdate) {\r\n   \r\n      Object.assign(productToUpdate, changes);\r\n    }\r\n  },\r\n  \r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}